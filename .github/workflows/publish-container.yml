# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build & Publish Containers

on:
  workflow_dispatch:

  push:
    branches:
      - next
      - main

env:
  USER: gecut

jobs:
  build:
    name: Build & Publish Containers
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: reverse-proxy

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: ⤵️ Checkout repository
        uses: actions/checkout@v4.1.7

      - name: 🏗 Install cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@v3.5.0

      - name: 🏗 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: 🏗 Cache Docker Layers
        uses: actions/cache@v4.0.2
        with:
          path: /tmp/.buildx-cache
          key: container/${{ matrix.name }}

      # - name: 🏗 Log into docker hub registry
      #   if: ${{ github.event_name != 'pull_request' &&  }}
      #   uses: docker/login-action@v3.2.0
      #   with:
      #     username: ${{env.USER}}
      #     password: ${{secrets.DOCKER_HUB_TOKEN}}

      - name: 🏗 Log into ghcr.io registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{env.USER}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: 🏗 Extract metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          images: |
            name=ghcr.io/${{env.USER}}/${{matrix.name}},enable=true
            name=docker.io/${{env.USER}}/${{matrix.name}},enable=false
          tags: |
            type=semver,enable=true,pattern={{major}}
            type=semver,enable=true,pattern={{major}}.{{minor}}
            type=semver,enable=true,pattern={{version}}
            type=ref,enable=true,event=branch
            type=raw,enable={{is_default_branch}},value=latest
          labels: |
            org.opencontainers.image.title="gecut/${{matrix.name}}"
            org.opencontainers.image.vendor="Gecut"
            org.opencontainers.image.documentation="https://github.com/gecut/hybrid-ui"
            org.opencontainers.image.authors="S. MohammadMahdi Zamanian <dev@mm25zamanain.ir> (https://mm25zamanian.ir)"

      - name: 🚀 Build and push container image
        id: build_and_push
        uses: docker/build-push-action@v6.0.2
        with:
          context: ./${{matrix.name}}
          file: ./${{matrix.name}}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      # - name: 🏗 Sign the image with GitHub OIDC Token
      #   if: ${{ github.event_name != 'pull_request' &&  }}
      #   env:
      #     COSIGN_EXPERIMENTAL: 'true'
      #   run: echo "${{steps.meta.outputs.tags}}" | xargs -I {} cosign sign --yes {}@${{steps.build_and_push.outputs.digest}}

  deploy:
    name: Deploy Container On Darkube
    container: hamravesh/darkube-cli:v1.1
    needs: build
    if: false
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: REVERSE_PROXY

    steps:
      - name: darkube-cli deploy
        run: darkube deploy --token ${DARKUBE_DEPLOY_TOKEN} --app-id ${DARKUBE_APP_ID} --image-tag latest --job-id ${GITHUB_RUN_ID}
        env:
          DARKUBE_DEPLOY_TOKEN: ${{ secrets[format('DARKUBE_{0}_DEPLOY_TOKEN', matrix.name)] }}
          DARKUBE_APP_ID: ${{ secrets[format('DARKUBE_{0}_APP_ID', matrix.name)] }}
